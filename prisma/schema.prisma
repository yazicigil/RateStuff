// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")   // runtime (pooler) URL
  directUrl = env("DIRECT_URL")     // migrate/push (direct 5432) URL
}

model User {
  id         String   @id @default(cuid())
  email      String   @unique
  name       String?
  maskedName String?
  avatarUrl  String?
  createdAt  DateTime @default(now())
  isAdmin    Boolean  @default(false)

  items     Item[]
  ratings   Rating[]
  comments  Comment[]
  saved     SavedItem[]    // ← eklendi
  reports   Report[]
}

model Item {
  id           String    @id @default(cuid())
  name         String
  description  String
  imageUrl     String?
  createdAt    DateTime  @default(now())
  editedAt     DateTime?
  createdById  String?
  createdBy    User?     @relation(fields: [createdById], references: [id], onDelete: SetNull)
  dedupeKey    String?  @unique

  ratings   Rating[]
  comments  Comment[]
  tags      ItemTag[]
  savedBy   SavedItem[]  // ← eklendi
  reports   Report[]
}

model Comment {
  id        String   @id @default(cuid())
  itemId    String
  userId    String
  text      String
  rating    Int      @default(0)
  createdAt DateTime @default(now())
  editedAt  DateTime?

  item Item @relation(fields: [itemId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Rating {
  id        String   @id @default(cuid())
  itemId    String
  userId    String
  value     Int      @default(0)
  createdAt DateTime @default(now())
  editedAt  DateTime?

  item Item @relation(fields: [itemId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([itemId, userId])
}

model Tag {
  id    String   @id @default(cuid())
  name  String   @unique
  items ItemTag[]
}

model ItemTag {
  itemId String
  tagId  String

  item Item @relation(fields: [itemId], references: [id], onDelete: Cascade)
  tag  Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([itemId, tagId])
}

model Report {
  id        String   @id @default(cuid())
  itemId    String
  userId    String
  createdAt DateTime @default(now())

  item Item @relation(fields: [itemId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([itemId, userId])
  @@index([itemId])
}

model SavedItem {
  userId   String
  itemId   String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  item Item @relation(fields: [itemId], references: [id], onDelete: Cascade)

  @@id([userId, itemId])
  @@index([userId])
  @@index([itemId])
}
